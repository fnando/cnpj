{"version":3,"sources":["webpack://cnpj/webpack/bootstrap","webpack://cnpj/./src/cnpj.js"],"names":["verifierDigit","format","strip","isValid","generate","BLACKLIST","STRICT_STRIP_REGEX","LOOSE_STRIP_REGEX","numbers","index","reverse","split","reduce","buffer","number","parseInt","concat","sum","mod","cnpj","replace","isStrict","regex","toString","stripped","length","includes","substr","useFormat","i","Math","floor","random"],"mappings":"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","file":"cnpj.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/cnpj.js\");\n","// Blacklist common values.\nconst BLACKLIST = [\n  \"00000000000000\",\n  \"11111111111111\",\n  \"22222222222222\",\n  \"33333333333333\",\n  \"44444444444444\",\n  \"55555555555555\",\n  \"66666666666666\",\n  \"77777777777777\",\n  \"88888888888888\",\n  \"99999999999999\"\n];\n\nconst STRICT_STRIP_REGEX = /[-\\/.]/g;\nconst LOOSE_STRIP_REGEX = /[^\\d]/g;\n\n/**\n * Compute the Verifier Digit (or \"DÃ­gito Verificador (DV)\" in portuguese) for CNPJ.\n *\n * You can learn more about this on [wikipedia (pt-br)](https://pt.wikipedia.org/wiki/D%C3%ADgito_verificador)\n *\n * @export\n * @param {string} numbers the CNPJ string with only numbers.\n * @returns {number} the verifier digit.\n */\nexport function verifierDigit(numbers) {\n  let index = 2;\n  const reverse = numbers.split(\"\").reduce(function(buffer, number) {\n    return [parseInt(number, 10)].concat(buffer);\n  }, []);\n\n  const sum = reverse.reduce(function(buffer, number) {\n    buffer += number * index;\n    index = (index === 9 ? 2 : index + 1);\n    return buffer;\n  }, 0);\n\n  const mod = sum % 11;\n  return (mod < 2 ? 0 : 11 - mod);\n}\n\n/**\n * Transform the input into a pretty CNPJ format.\n *\n * Example:\n * ```\n * format('54550752000155');\n * // Result: '54.550.752/0001-55'\n * ```\n *\n * @export\n * @param {string} cnpj the CNPJ.\n * @returns {string} the formatted CNPJ.\n */\nexport function format(cnpj) {\n  return strip(cnpj).replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\n}\n\n\n/**\n * Remove some characters from the input.\n *\n * Example:\n * ```\n * strip('54550[752#0001..$55'); // Result: '54550752000155'\n * strip('54550[752#0001..$55', true); // Result: '54550[752#0001..$55' - Atention!\n * ```\n *\n * @export\n * @param {string} cnpj the CNPJ text.\n * @param {boolean} [isStrict] if `true`, it will remove only `.` and `-` characters.\n *                             Otherwise, it will remove all non-digit (`[^\\d]`) characters. Optional.\n * @returns {string} the stripped CNPJ.\n */\nexport function strip(cnpj, isStrict) {\n  const regex = isStrict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\n  return (cnpj || \"\").toString().replace(regex, \"\");\n}\n\n/**\n * Validate the CNPJ.\n *\n * @export\n * @param {string} cnpj the CNPJ number.\n * @param {boolean} [isStrict] if `true`, it will accept only `digits`, `.` and `-` characters. Optional.\n * @returns {boolean} `true` if CNPJ is valid. Otherwise, `false`.\n */\nexport function isValid(cnpj, isStrict) {\n  const stripped = strip(cnpj, isStrict);\n\n  // CNPJ must be defined\n  if (!stripped) { return false; }\n\n  // CNPJ must have 14 chars\n  if (stripped.length !== 14) { return false; }\n\n  // CNPJ can't be blacklisted\n  if (BLACKLIST.includes(stripped)) { return false; }\n\n  let numbers = stripped.substr(0, 12);\n  numbers += verifierDigit(numbers);\n  numbers += verifierDigit(numbers);\n\n  return numbers.substr(-2) === stripped.substr(-2);\n}\n\n\n/**\n * Generate a random CNPJ.\n *\n * @export\n * @param {boolean} [useFormat] if `true`, it will format using `.` and `-`. Optional.\n * @returns {string} the CNPJ.\n */\nexport function generate(useFormat) {\n  let numbers = \"\";\n\n  for (let i = 0; i < 12; i += 1) {\n    numbers += Math.floor(Math.random() * 9);\n  }\n\n  numbers += verifierDigit(numbers);\n  numbers += verifierDigit(numbers);\n\n  return (useFormat ? format(numbers) : numbers);\n}\n"],"sourceRoot":""}