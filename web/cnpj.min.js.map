{"version":3,"file":"cnpj.min.js","mappings":"4BACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+FCJ9D,MAAMC,EAAc,CAChB,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEEC,EAAqB,UACrBC,EAAoB,YACpBC,EAAQ,wCAAwCC,MAAM,IAUrD,SAASC,EAAcC,GAC1B,IAAIC,EAAQ,EACZ,MAMMC,EANUF,EAAQG,QAAO,CAACC,EAAQC,IAAW,CAACA,GAAQC,OAAOF,IAAS,IACxDD,QAAO,CAACC,EAAQC,KAChCD,GAAUC,EAASJ,EACnBA,EAAkB,IAAVA,EAAc,EAAIA,EAAQ,EAC3BG,IACR,GACe,GAClB,OAAOF,EAAM,EAAI,EAAI,GAAKA,CAC9B,CAgBO,SAASK,EAAMC,EAAMC,GAAW,GACnC,MAAMC,EAAQD,EAAWd,EAAqBC,EAC9C,OAAQY,GAAQ,IAAIG,WAAWC,cAAcC,QAAQH,EAAO,GAChE,CAcO,SAASI,EAAON,GACnB,OAAOD,EAAMC,EAAKI,eAAeC,QAAQ,4DAA6D,iBAC1G,CASO,SAASE,EAAQP,EAAMC,GAAW,GACrC,MAAMO,EAAWT,EAAMC,EAAMC,GAE7B,IAAKO,EACD,OAAO,EAGX,GAAwB,KAApBA,EAASC,OACT,OAAO,EAEX,GAAIvB,EAAYwB,SAASF,GACrB,OAAO,EAEX,IACIhB,EADSgB,EAASG,OAAO,EAAG,IAAIrB,MAAM,IACrBsB,KAAKC,GAAUA,EAAMC,WAAW,GAAK,KAG1D,OAFAtB,EAAQuB,KAAKxB,EAAcC,IAC3BA,EAAQuB,KAAKxB,EAAcC,IACpBA,EAAQwB,MAAM,IAAIC,KAAK,MAAQT,EAASG,QAAQ,EAC3D,CAQO,SAASO,EAASC,GAAY,GACjC,IAAIC,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACzBD,EAAOL,KAAK1B,EAAMiC,KAAKC,MAAMD,KAAKE,SAAWnC,EAAMoB,UAEvD,IAAIjB,EAAU4B,EAAOR,KAAKC,GAAUA,EAAMC,WAAW,GAAK,KAC1DtB,EAAQuB,KAAKxB,EAAcC,IAC3BA,EAAQuB,KAAKxB,EAAcC,IAC3B,IAAIQ,EAAOoB,EAAOtB,OAAON,EAAQwB,MAAM,KAAKC,KAAK,IACjD,OAAOE,EAAYb,EAAON,GAAQA,CACtC,C","sources":["webpack://CNPJ/webpack/bootstrap","webpack://CNPJ/webpack/runtime/define property getters","webpack://CNPJ/webpack/runtime/hasOwnProperty shorthand","webpack://CNPJ/webpack/runtime/make namespace object","webpack://CNPJ/./es/index.mjs"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Reject common values.\nconst REJECT_LIST = [\n    \"00000000000000\",\n    \"11111111111111\",\n    \"22222222222222\",\n    \"33333333333333\",\n    \"44444444444444\",\n    \"55555555555555\",\n    \"66666666666666\",\n    \"77777777777777\",\n    \"88888888888888\",\n    \"99999999999999\",\n];\nconst STRICT_STRIP_REGEX = /[-\\/.]/g;\nconst LOOSE_STRIP_REGEX = /[^A-Z\\d]/g;\nconst CHARS = \"01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n/**\n * Compute the Verifier Digit (or \"DÃ­gito Verificador (DV)\" in portuguese) for CNPJ.\n *\n * You can learn more about this on [wikipedia (pt-br)](https://pt.wikipedia.org/wiki/D%C3%ADgito_verificador)\n *\n * @export\n * @param {string} numbers the CNPJ string with only numbers.\n * @returns {number} the verifier digit.\n */\nexport function verifierDigit(numbers) {\n    let index = 2;\n    const reverse = numbers.reduce((buffer, number) => [number].concat(buffer), []);\n    const sum = reverse.reduce((buffer, number) => {\n        buffer += number * index;\n        index = index === 9 ? 2 : index + 1;\n        return buffer;\n    }, 0);\n    const mod = sum % 11;\n    return mod < 2 ? 0 : 11 - mod;\n}\n/**\n * Remove some characters from the input.\n *\n * Example:\n * ```\n * strip('54550[752#0001..$55'); // Result: '54550752000155'\n * strip('54550[752#0001..$55', true); // Result: '54550[752#0001..$55' - Attention!\n * ```\n *\n * @export\n * @param {string} cnpj the CNPJ text.\n * @param {boolean} [isStrict] if `true`, it will remove only `.` and `-` characters.\n *                             Otherwise, it will remove all non-digit (`[^A-Z\\d]`) characters. Optional.\n * @returns {string} the stripped CNPJ.\n */\nexport function strip(cnpj, isStrict = false) {\n    const regex = isStrict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\n    return (cnpj || \"\").toString().toUpperCase().replace(regex, \"\");\n}\n/**\n * Transform the input into a pretty CNPJ format.\n *\n * Example:\n * ```\n * format('54550752000155');\n * // Result: '54.550.752/0001-55'\n * ```\n *\n * @export\n * @param {string} cnpj the CNPJ.\n * @returns {string} the formatted CNPJ.\n */\nexport function format(cnpj) {\n    return strip(cnpj.toUpperCase()).replace(/^([A-Z\\d]{2})([A-Z\\d]{3})([A-Z\\d]{3})([A-Z\\d]{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\n}\n/**\n * Validate the CNPJ.\n *\n * @export\n * @param {string} cnpj the CNPJ number.\n * @param {boolean} [isStrict] if `true`, it will accept only `digits`, `.` and `-` characters. Optional.\n * @returns {boolean} `true` if CNPJ is valid. Otherwise, `false`.\n */\nexport function isValid(cnpj, isStrict = false) {\n    const stripped = strip(cnpj, isStrict);\n    // CNPJ must be defined\n    if (!stripped) {\n        return false;\n    }\n    // CNPJ must have 14 chars\n    if (stripped.length !== 14) {\n        return false;\n    }\n    if (REJECT_LIST.includes(stripped)) {\n        return false;\n    }\n    let digits = stripped.substr(0, 12).split(\"\");\n    let numbers = digits.map((digit) => digit.charCodeAt(0) - 48);\n    numbers.push(verifierDigit(numbers));\n    numbers.push(verifierDigit(numbers));\n    return numbers.slice(12).join(\"\") === stripped.substr(-2);\n}\n/**\n * Generate a random CNPJ.\n *\n * @export\n * @param {boolean} [useFormat] if `true`, it will format using `.` and `-`. Optional.\n * @returns {string} the CNPJ.\n */\nexport function generate(useFormat = false) {\n    let digits = [];\n    for (let i = 0; i < 12; i += 1) {\n        digits.push(CHARS[Math.floor(Math.random() * CHARS.length)]);\n    }\n    let numbers = digits.map((digit) => digit.charCodeAt(0) - 48);\n    numbers.push(verifierDigit(numbers));\n    numbers.push(verifierDigit(numbers));\n    let cnpj = digits.concat(numbers.slice(12)).join(\"\");\n    return useFormat ? format(cnpj) : cnpj;\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","REJECT_LIST","STRICT_STRIP_REGEX","LOOSE_STRIP_REGEX","CHARS","split","verifierDigit","numbers","index","mod","reduce","buffer","number","concat","strip","cnpj","isStrict","regex","toString","toUpperCase","replace","format","isValid","stripped","length","includes","substr","map","digit","charCodeAt","push","slice","join","generate","useFormat","digits","i","Math","floor","random"],"sourceRoot":""}